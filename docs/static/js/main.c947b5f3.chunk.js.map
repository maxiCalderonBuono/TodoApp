{"version":3,"sources":["components/todoReducer.js","hooks/useForm.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","todoId","desc","done","useForm","initialState","useState","formData","setFormData","reset","handleInputChange","target","name","value","TodoListItem","index","handleDelete","handleToggle","handleEdit","click","setClick","description","onSubmit","e","preventDefault","trim","length","className","autoComplete","placeholder","onChange","autoFocus","onBlur","onClick","TodoList","todos","i","TodoAdd","handleAddTodo","newTodo","Date","getTime","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c947b5f3.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n    case \"delete\":\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n    case \"update\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload.todoId ? { ...todo, desc: action.payload.desc } : todo\r\n      );\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   const [formData, setFormData] = useState(initialState)\r\n\r\n   const reset = ()=> {\r\n       setFormData(initialState);\r\n   }\r\n\r\n   const handleInputChange = ({target}) => {  \r\n    setFormData ({\r\n        ...formData,\r\n        [target.name]: target.value,\r\n    })\r\n    \r\n}\r\n\r\nreturn [formData, handleInputChange, reset]\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport \"animate.css\";\r\n\r\nexport const TodoListItem = ({\r\n  todo,\r\n  index,\r\n  handleDelete,\r\n  handleToggle,\r\n  handleEdit,\r\n  desc,\r\n}) => {\r\n  const [click, setClick] = useState(false);\r\n\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: desc,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n\r\n    handleEdit(click, description);\r\n\r\n    setClick(!click);\r\n\r\n    reset();\r\n  };\r\n\r\n\r\n  const handleElimination = (todoId) => {\r\n      \r\n    handleDelete(todoId, click, setClick)\r\n       \r\n  }\r\n \r\n\r\n  return click ? (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        name=\"description\"\r\n        autoComplete=\"off\"\r\n        placeholder={desc}\r\n        value={description}\r\n        onChange={handleInputChange}\r\n        autoFocus\r\n        onBlur={() => setClick(!click)}\r\n      />\r\n    </form>\r\n  ) : (\r\n    <li\r\n      className={\r\n        \"list-group-item list-group-item-action list-group-item-light\" +\r\n        (click ? \" animate__animated animate__fadeOut\" : \" animate__animated animate__fadeIn\")\r\n      }\r\n      key={todo.id}\r\n     \r\n    >\r\n      <p\r\n        className={`${todo.done && \"complete\"}`}\r\n        onClick={() => handleToggle(todo.id)}\r\n      >\r\n        {index + 1}.{todo.desc}\r\n      </p>\r\n      <div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-sm me-1\"\r\n          onClick={() => setClick(todo.id)}\r\n        >\r\n          <i className=\"far fa-edit\" />\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={() => handleElimination(todo.id)}\r\n        >\r\n          <i className=\"far fa-trash-alt\" />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTodoListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  handleToggle: PropTypes.func.isRequired,\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { TodoListItem } from \"./TodoListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\nexport const TodoList = ({ todos, handleToggle, handleDelete, handleEdit }) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n\r\n      {todos.map((todo, i) => (\r\n          <TodoListItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            index={i}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n            handleEdit={handleEdit}\r\n            desc={todo.desc}\r\n          />\r\n       \r\n      ))}\r\n       \r\n    </ul>\r\n  );\r\n};\r\n\r\nTodoList.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  handleToggle: PropTypes.func.isRequired,\r\n  todos: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n\r\n    handleAddTodo(newTodo)\r\n\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4>Add Task</h4>\r\n      <hr />\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"description\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Your task\"\r\n          value={description}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button type=\"submit\" className=\"btn btn-success mt-2 col-12\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport \"./todo.css\";\r\nimport { todoReducer } from \"./todoReducer\";\r\nimport { TodoList } from \"./TodoList\";\r\nimport { TodoAdd } from \"./TodoAdd\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleAddTodo = (newTodo) => {\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: newTodo,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (todoId, click, setClick) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n\r\n        setClick(!click);\r\n\r\n        const action = {\r\n          type: \"delete\",\r\n          payload: todoId,\r\n        };\r\n\r\n        dispatch(action);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleToggle = (todoId) => {\r\n    dispatch({\r\n      type: \"toggle\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (todoId, desc) => {\r\n    dispatch({\r\n      type: \"update\",\r\n      payload: { todoId, desc },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>\r\n        ToDo App <small>({todos.length})</small>\r\n      </h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <TodoList\r\n            todos={todos}\r\n            handleToggle={handleToggle}\r\n            handleDelete={handleDelete}\r\n            handleEdit={handleEdit}\r\n          />\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <TodoAdd handleAddTodo={handleAddTodo} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {TodoApp} from './components/TodoApp'\n\nReactDOM.render(\n\n  <TodoApp />,\n  document.getElementById(\"root\")\n);\n \n\n"],"sourceRoot":""}